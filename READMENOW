import pygame
import random
import sys

pygame.init()
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pattern Quest")
font = pygame.font.SysFont(None, 40)

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

def draw_text(text, x, y):
    img = font.render(text, True, BLACK)
    screen.blit(img, (x, y))

def generate_linear_pattern(start, step, length):
    return [start + step * i for i in range(length)]

def generate_square_pattern(length):
    return [i**2 for i in range(1, length + 1)]

def main():
    clock = pygame.time.Clock()
    level = 1
    score = 0
    running = True

    while running:
        screen.fill(WHITE)
        draw_text(f"Level {level}", 50, 50)
        draw_text(f"Score: {score}", 600, 50)

        if level % 2 == 1:
            pattern = generate_linear_pattern(random.randint(1, 5), random.randint(2, 5), 5)
            rule = "Linear (Repeated Addition)"
        else:
            pattern = generate_square_pattern(5)
            rule = "Square Numbers"

        draw_text(f"Pattern Type: {rule}", 50, 100)
        draw_text("Sequence: " + ", ".join(map(str, pattern[:-1])) + ", ?", 50, 150)
        correct_answer = pattern[-1]

        user_input = ""
        input_active = True

        while input_active:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                elif event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_RETURN:
                        if user_input.isdigit() and int(user_input) == correct_answer:
                            score += 10
                            level += 1
                        else:
                            score -= 5
                        input_active = False
                    elif event.key == pygame.K_BACKSPACE:
                        user_input = user_input[:-1]
                    else:
                        user_input += event.unicode

            screen.fill(WHITE)
            draw_text(f"Level {level}", 50, 50)
            draw_text(f"Score: {score}", 600, 50)
            draw_text(f"Pattern Type: {rule}", 50, 100)
            draw_text("Sequence: " + ", ".join(map(str, pattern[:-1])) + ", ?", 50, 150)
            draw_text("Your Answer: " + user_input, 50, 250)
            pygame.display.flip()
            clock.tick(30)

if __name__ == "__main__":
    main()
